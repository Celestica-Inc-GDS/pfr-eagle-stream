// Copyright (C) 2017  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel MegaCore Function License Agreement, or other 
// applicable license agreement, including, without limitation, 
// that your use is for the sole purpose of programming logic 
// devices manufactured by Intel and sold by Intel or its 
// authorized distributors.  Please refer to the applicable 
// agreement for further details.


// Generated by Quartus Prime Version 17.0 (Build Build 595 04/25/2017)
// Created on Thu Dec 21 12:22:19 2017

Wilson_City_RP_TOP Wilson_City_RP_TOP_inst
(
	.CLK_25M_CKMNG_MAIN_PLD(CLK_25M_CKMNG_MAIN_PLD) ,	// input  CLK_25M_CKMNG_MAIN_PLD
	.SGPIO_BMC_CLK(SGPIO_BMC_CLK) ,	// input  SGPIO_BMC_CLK
	.SGPIO_BMC_DOUT(SGPIO_BMC_DOUT) ,	// input  SGPIO_BMC_DOUT
	.SGPIO_BMC_DIN(SGPIO_BMC_DIN) ,	// output  SGPIO_BMC_DIN
	.SGPIO_BMC_LD_N(SGPIO_BMC_LD_N) ,	// input  SGPIO_BMC_LD_N
	.LED_CONTROL(LED_CONTROL) ,	// output [7:0] LED_CONTROL
	.FM_CPU1_DIMM_CH1_4_FAULT_LED_SEL(FM_CPU1_DIMM_CH1_4_FAULT_LED_SEL) ,	// output  FM_CPU1_DIMM_CH1_4_FAULT_LED_SEL
	.FM_CPU1_DIMM_CH5_8_FAULT_LED_SEL(FM_CPU1_DIMM_CH5_8_FAULT_LED_SEL) ,	// output  FM_CPU1_DIMM_CH5_8_FAULT_LED_SEL
	.FM_CPU2_DIMM_CH1_4_FAULT_LED_SEL(FM_CPU2_DIMM_CH1_4_FAULT_LED_SEL) ,	// output  FM_CPU2_DIMM_CH1_4_FAULT_LED_SEL
	.FM_CPU2_DIMM_CH5_8_FAULT_LED_SEL(FM_CPU2_DIMM_CH5_8_FAULT_LED_SEL) ,	// output  FM_CPU2_DIMM_CH5_8_FAULT_LED_SEL
	.FM_FAN_FAULT_LED_SEL_N(FM_FAN_FAULT_LED_SEL_N) ,	// output  FM_FAN_FAULT_LED_SEL_N
	.FM_POST_7SEG1_SEL_N(FM_POST_7SEG1_SEL_N) ,	// output  FM_POST_7SEG1_SEL_N
	.FM_POST_7SEG2_SEL_N(FM_POST_7SEG2_SEL_N) ,	// output  FM_POST_7SEG2_SEL_N
	.FM_POSTLED_SEL(FM_POSTLED_SEL) ,	// output  FM_POSTLED_SEL
	.FM_CPU_CATERR_DLY_LVT3_N(FM_CPU_CATERR_DLY_LVT3_N) ,	// output  FM_CPU_CATERR_DLY_LVT3_N
	.FM_CPU_CATERR_PLD_LVT3_N(FM_CPU_CATERR_PLD_LVT3_N) ,	// input  FM_CPU_CATERR_PLD_LVT3_N
	.FM_ADR_COMPLETE(FM_ADR_COMPLETE) ,	// input  FM_ADR_COMPLETE
	.FM_ADR_COMPLETE_DLY(FM_ADR_COMPLETE_DLY) ,	// output  FM_ADR_COMPLETE_DLY
	.FM_ADR_SMI_GPIO_N(FM_ADR_SMI_GPIO_N) ,	// output  FM_ADR_SMI_GPIO_N
	.FM_ADR_TRIGGER_N(FM_ADR_TRIGGER_N) ,	// output  FM_ADR_TRIGGER_N
	.FM_PLD_PCH_DATA(FM_PLD_PCH_DATA) ,	// input  FM_PLD_PCH_DATA
	.FM_PS_PWROK_DLY_SEL(FM_PS_PWROK_DLY_SEL) ,	// input  FM_PS_PWROK_DLY_SEL
	.FM_DIS_PS_PWROK_DLY(FM_DIS_PS_PWROK_DLY) ,	// input  FM_DIS_PS_PWROK_DLY
	.FM_PCH_ESPI_MUX_SEL(FM_PCH_ESPI_MUX_SEL) ,	// output  FM_PCH_ESPI_MUX_SEL
	.FM_PMBUS_ALERT_B_EN(FM_PMBUS_ALERT_B_EN) ,	// input  FM_PMBUS_ALERT_B_EN
	.FM_THROTTLE_N(FM_THROTTLE_N) ,	// input  FM_THROTTLE_N
	.IRQ_SML1_PMBUS_PLD_ALERT_N(IRQ_SML1_PMBUS_PLD_ALERT_N) ,	// input  IRQ_SML1_PMBUS_PLD_ALERT_N
	.FM_SYS_THROTTLE_LVC3_PLD(FM_SYS_THROTTLE_LVC3_PLD) ,	// output  FM_SYS_THROTTLE_LVC3_PLD
	.FM_CPU1_THERMTRIP_LVT3_PLD_N(FM_CPU1_THERMTRIP_LVT3_PLD_N) ,	// input  FM_CPU1_THERMTRIP_LVT3_PLD_N
	.FM_CPU2_THERMTRIP_LVT3_PLD_N(FM_CPU2_THERMTRIP_LVT3_PLD_N) ,	// input  FM_CPU2_THERMTRIP_LVT3_PLD_N
	.FM_MEM_THERM_EVENT_CPU1_LVT3_N(FM_MEM_THERM_EVENT_CPU1_LVT3_N) ,	// input  FM_MEM_THERM_EVENT_CPU1_LVT3_N
	.FM_MEM_THERM_EVENT_CPU2_LVT3_N(FM_MEM_THERM_EVENT_CPU2_LVT3_N) ,	// input  FM_MEM_THERM_EVENT_CPU2_LVT3_N
	.FM_THERMTRIP_DLY(FM_THERMTRIP_DLY) ,	// output  FM_THERMTRIP_DLY
	.IRQ_PVDDQ_ABCD_CPU1_VRHOT_LVC3_N(IRQ_PVDDQ_ABCD_CPU1_VRHOT_LVC3_N) ,	// input  IRQ_PVDDQ_ABCD_CPU1_VRHOT_LVC3_N
	.IRQ_PVDDQ_EFGH_CPU1_VRHOT_LVC3_N(IRQ_PVDDQ_EFGH_CPU1_VRHOT_LVC3_N) ,	// input  IRQ_PVDDQ_EFGH_CPU1_VRHOT_LVC3_N
	.IRQ_PVDDQ_ABCD_CPU2_VRHOT_LVC3_N(IRQ_PVDDQ_ABCD_CPU2_VRHOT_LVC3_N) ,	// input  IRQ_PVDDQ_ABCD_CPU2_VRHOT_LVC3_N
	.IRQ_PVDDQ_EFGH_CPU2_VRHOT_LVC3_N(IRQ_PVDDQ_EFGH_CPU2_VRHOT_LVC3_N) ,	// input  IRQ_PVDDQ_EFGH_CPU2_VRHOT_LVC3_N
	.FM_CPU1_MEMHOT_IN(FM_CPU1_MEMHOT_IN) ,	// output  FM_CPU1_MEMHOT_IN
	.FM_CPU2_MEMHOT_IN(FM_CPU2_MEMHOT_IN) ,	// output  FM_CPU2_MEMHOT_IN
	.FM_CPU1_MEMTRIP_N(FM_CPU1_MEMTRIP_N) ,	// input  FM_CPU1_MEMTRIP_N
	.FM_CPU2_MEMTRIP_N(FM_CPU2_MEMTRIP_N) ,	// input  FM_CPU2_MEMTRIP_N
	.FM_PVCCIN_CPU1_PWR_IN_ALERT_N(FM_PVCCIN_CPU1_PWR_IN_ALERT_N) ,	// input  FM_PVCCIN_CPU1_PWR_IN_ALERT_N
	.FM_PVCCIN_CPU2_PWR_IN_ALERT_N(FM_PVCCIN_CPU2_PWR_IN_ALERT_N) ,	// input  FM_PVCCIN_CPU2_PWR_IN_ALERT_N
	.IRQ_PVCCIN_CPU1_VRHOT_LVC3_N(IRQ_PVCCIN_CPU1_VRHOT_LVC3_N) ,	// input  IRQ_PVCCIN_CPU1_VRHOT_LVC3_N
	.IRQ_PVCCIN_CPU2_VRHOT_LVC3_N(IRQ_PVCCIN_CPU2_VRHOT_LVC3_N) ,	// input  IRQ_PVCCIN_CPU2_VRHOT_LVC3_N
	.FM_CPU1_PROCHOT_LVC3_N(FM_CPU1_PROCHOT_LVC3_N) ,	// output  FM_CPU1_PROCHOT_LVC3_N
	.FM_CPU2_PROCHOT_LVC3_N(FM_CPU2_PROCHOT_LVC3_N) ,	// output  FM_CPU2_PROCHOT_LVC3_N
	.FM_RST_PERST_BIT0(FM_RST_PERST_BIT0) ,	// input  FM_RST_PERST_BIT0
	.FM_RST_PERST_BIT1(FM_RST_PERST_BIT1) ,	// input  FM_RST_PERST_BIT1
	.FM_RST_PERST_BIT2(FM_RST_PERST_BIT2) ,	// input  FM_RST_PERST_BIT2
	.RST_PCIE_PERST0_N(RST_PCIE_PERST0_N) ,	// output  RST_PCIE_PERST0_N
	.RST_PCIE_PERST1_N(RST_PCIE_PERST1_N) ,	// output  RST_PCIE_PERST1_N
	.RST_PCIE_PERST2_N(RST_PCIE_PERST2_N) ,	// output  RST_PCIE_PERST2_N
	.RST_CPU1_LVC3_N(RST_CPU1_LVC3_N) ,	// output  RST_CPU1_LVC3_N
	.RST_CPU2_LVC3_N(RST_CPU2_LVC3_N) ,	// output  RST_CPU2_LVC3_N
	.RST_PLTRST_PLD_B_N(RST_PLTRST_PLD_B_N) ,	// output  RST_PLTRST_PLD_B_N
	.RST_PLTRST_PLD_N(RST_PLTRST_PLD_N) ,	// input  RST_PLTRST_PLD_N
	.FM_CPU1_FIVR_FAULT_LVT3_PLD(FM_CPU1_FIVR_FAULT_LVT3_PLD) ,	// input  FM_CPU1_FIVR_FAULT_LVT3_PLD
	.FM_CPU2_FIVR_FAULT_LVT3_PLD(FM_CPU2_FIVR_FAULT_LVT3_PLD) ,	// input  FM_CPU2_FIVR_FAULT_LVT3_PLD
	.FM_CPU1_PKGID0(FM_CPU1_PKGID0) ,	// input  FM_CPU1_PKGID0
	.FM_CPU1_PKGID1(FM_CPU1_PKGID1) ,	// input  FM_CPU1_PKGID1
	.FM_CPU1_PKGID2(FM_CPU1_PKGID2) ,	// input  FM_CPU1_PKGID2
	.FM_CPU1_PROC_ID0(FM_CPU1_PROC_ID0) ,	// input  FM_CPU1_PROC_ID0
	.FM_CPU1_PROC_ID1(FM_CPU1_PROC_ID1) ,	// input  FM_CPU1_PROC_ID1
	.FM_CPU1_INTR_PRSNT(FM_CPU1_INTR_PRSNT) ,	// input  FM_CPU1_INTR_PRSNT
	.FM_CPU1_SKTOCC_LVT3_PLD_N(FM_CPU1_SKTOCC_LVT3_PLD_N) ,	// input  FM_CPU1_SKTOCC_LVT3_PLD_N
	.FM_CPU2_PKGID0(FM_CPU2_PKGID0) ,	// input  FM_CPU2_PKGID0
	.FM_CPU2_PKGID1(FM_CPU2_PKGID1) ,	// input  FM_CPU2_PKGID1
	.FM_CPU2_PKGID2(FM_CPU2_PKGID2) ,	// input  FM_CPU2_PKGID2
	.FM_CPU2_PROC_ID0(FM_CPU2_PROC_ID0) ,	// input  FM_CPU2_PROC_ID0
	.FM_CPU2_PROC_ID1(FM_CPU2_PROC_ID1) ,	// input  FM_CPU2_PROC_ID1
	.FM_CPU2_INTR_PRSNT(FM_CPU2_INTR_PRSNT) ,	// input  FM_CPU2_INTR_PRSNT
	.FM_CPU2_SKTOCC_LVT3_PLD_N(FM_CPU2_SKTOCC_LVT3_PLD_N) ,	// input  FM_CPU2_SKTOCC_LVT3_PLD_N
	.FM_BMC_PWRBTN_OUT_N(FM_BMC_PWRBTN_OUT_N) ,	// input  FM_BMC_PWRBTN_OUT_N
	.FM_BMC_PLD_PWRBTN_OUT_N(FM_BMC_PLD_PWRBTN_OUT_N) ,	// output  FM_BMC_PLD_PWRBTN_OUT_N
	.FM_BMC_ONCTL_N_PLD(FM_BMC_ONCTL_N_PLD) ,	// input  FM_BMC_ONCTL_N_PLD
	.RST_SRST_BMC_PLD_R_N(RST_SRST_BMC_PLD_R_N) ,	// output  RST_SRST_BMC_PLD_R_N
	.FM_P2V5_BMC_EN_R(FM_P2V5_BMC_EN_R) ,	// output  FM_P2V5_BMC_EN_R
	.PWRGD_P1V1_BMC_AUX(PWRGD_P1V1_BMC_AUX) ,	// input  PWRGD_P1V1_BMC_AUX
	.RST_RSMRST_PLD_R_N(RST_RSMRST_PLD_R_N) ,	// output  RST_RSMRST_PLD_R_N
	.PWRGD_PCH_PWROK_R(PWRGD_PCH_PWROK_R) ,	// output  PWRGD_PCH_PWROK_R
	.PWRGD_SYS_PWROK_R(PWRGD_SYS_PWROK_R) ,	// output  PWRGD_SYS_PWROK_R
	.FM_SLP_SUS_RSM_RST_N(FM_SLP_SUS_RSM_RST_N) ,	// input  FM_SLP_SUS_RSM_RST_N
	.FM_SLPS3_PLD_N(FM_SLPS3_PLD_N) ,	// input  FM_SLPS3_PLD_N
	.FM_SLPS4_PLD_N(FM_SLPS4_PLD_N) ,	// input  FM_SLPS4_PLD_N
	.FM_PCH_PRSNT_N(FM_PCH_PRSNT_N) ,	// input  FM_PCH_PRSNT_N
	.FM_PCH_P1V8_AUX_EN_R(FM_PCH_P1V8_AUX_EN_R) ,	// output  FM_PCH_P1V8_AUX_EN_R
	.PWRGD_P1V05_PCH_AUX(PWRGD_P1V05_PCH_AUX) ,	// input  PWRGD_P1V05_PCH_AUX
	.PWRGD_P1V8_PCH_AUX_PLD(PWRGD_P1V8_PCH_AUX_PLD) ,	// input  PWRGD_P1V8_PCH_AUX_PLD
	.FM_PS_EN_PLD_R(FM_PS_EN_PLD_R) ,	// output  FM_PS_EN_PLD_R
	.PWRGD_PS_PWROK_PLD_R(PWRGD_PS_PWROK_PLD_R) ,	// input  PWRGD_PS_PWROK_PLD_R
	.FM_CPU1_MCP_CLK_OE_R_N(FM_CPU1_MCP_CLK_OE_R_N) ,	// output  FM_CPU1_MCP_CLK_OE_R_N
	.FM_CPU2_MCP_CLK_OE_R_N(FM_CPU2_MCP_CLK_OE_R_N) ,	// output  FM_CPU2_MCP_CLK_OE_R_N
	.FM_PLD_CLKS_OE_R_N(FM_PLD_CLKS_OE_R_N) ,	// output  FM_PLD_CLKS_OE_R_N
	.FM_PLD_DEV_R_EN(FM_PLD_DEV_R_EN) ,	// output  FM_PLD_DEV_R_EN
	.PWRGD_P3V3_AUX_PLD_R(PWRGD_P3V3_AUX_PLD_R) ,	// input  PWRGD_P3V3_AUX_PLD_R
	.PWRGD_P3V3(PWRGD_P3V3) ,	// input  PWRGD_P3V3
	.FM_P5V_EN(FM_P5V_EN) ,	// output  FM_P5V_EN
	.FM_AUX_SW_EN(FM_AUX_SW_EN) ,	// output  FM_AUX_SW_EN
	.PWRGD_CPU1_PVDDQ_ABCD(PWRGD_CPU1_PVDDQ_ABCD) ,	// input  PWRGD_CPU1_PVDDQ_ABCD
	.PWRGD_CPU1_PVDDQ_EFGH(PWRGD_CPU1_PVDDQ_EFGH) ,	// input  PWRGD_CPU1_PVDDQ_EFGH
	.PWRGD_CPU2_PVDDQ_ABCD(PWRGD_CPU2_PVDDQ_ABCD) ,	// input  PWRGD_CPU2_PVDDQ_ABCD
	.PWRGD_CPU2_PVDDQ_EFGH(PWRGD_CPU2_PVDDQ_EFGH) ,	// input  PWRGD_CPU2_PVDDQ_EFGH
	.FM_PVPP_CPU1_EN(FM_PVPP_CPU1_EN) ,	// output  FM_PVPP_CPU1_EN
	.FM_PVPP_CPU2_EN(FM_PVPP_CPU2_EN) ,	// output  FM_PVPP_CPU2_EN
	.PWRGD_CPU1_LVC3(PWRGD_CPU1_LVC3) ,	// output  PWRGD_CPU1_LVC3
	.PWRGD_CPU2_LVC3(PWRGD_CPU2_LVC3) ,	// output  PWRGD_CPU2_LVC3
	.PWRGD_CPUPWRGD_PLD_R(PWRGD_CPUPWRGD_PLD_R) ,	// input  PWRGD_CPUPWRGD_PLD_R
	.PWRGD_DRAMPWRGD_CPU(PWRGD_DRAMPWRGD_CPU) ,	// output  PWRGD_DRAMPWRGD_CPU
	.FM_P1V1_EN(FM_P1V1_EN) ,	// output  FM_P1V1_EN
	.FM_P1V8_PCIE_CPU1_EN(FM_P1V8_PCIE_CPU1_EN) ,	// output  FM_P1V8_PCIE_CPU1_EN
	.FM_P1V8_PCIE_CPU2_EN(FM_P1V8_PCIE_CPU2_EN) ,	// output  FM_P1V8_PCIE_CPU2_EN
	.FM_PVCCANA_CPU1_EN(FM_PVCCANA_CPU1_EN) ,	// output  FM_PVCCANA_CPU1_EN
	.FM_PVCCANA_CPU2_EN(FM_PVCCANA_CPU2_EN) ,	// output  FM_PVCCANA_CPU2_EN
	.FM_PVCCIN_CPU1_EN(FM_PVCCIN_CPU1_EN) ,	// output  FM_PVCCIN_CPU1_EN
	.FM_PVCCIN_CPU2_EN(FM_PVCCIN_CPU2_EN) ,	// output  FM_PVCCIN_CPU2_EN
	.FM_PVCCIO_CPU1_EN(FM_PVCCIO_CPU1_EN) ,	// output  FM_PVCCIO_CPU1_EN
	.FM_PVCCIO_CPU2_EN(FM_PVCCIO_CPU2_EN) ,	// output  FM_PVCCIO_CPU2_EN
	.FM_PVCCSA_CPU1_EN(FM_PVCCSA_CPU1_EN) ,	// output  FM_PVCCSA_CPU1_EN
	.FM_PVCCSA_CPU2_EN(FM_PVCCSA_CPU2_EN) ,	// output  FM_PVCCSA_CPU2_EN
	.PWRGD_BIAS_P1V1(PWRGD_BIAS_P1V1) ,	// input  PWRGD_BIAS_P1V1
	.PWRGD_P1V8_PCIE_CPU1(PWRGD_P1V8_PCIE_CPU1) ,	// input  PWRGD_P1V8_PCIE_CPU1
	.PWRGD_P1V8_PCIE_CPU2(PWRGD_P1V8_PCIE_CPU2) ,	// input  PWRGD_P1V8_PCIE_CPU2
	.PWRGD_PVCCIN_CPU1(PWRGD_PVCCIN_CPU1) ,	// input  PWRGD_PVCCIN_CPU1
	.PWRGD_PVCCIN_CPU2(PWRGD_PVCCIN_CPU2) ,	// input  PWRGD_PVCCIN_CPU2
	.PWRGD_PVCCIO_CPU1(PWRGD_PVCCIO_CPU1) ,	// input  PWRGD_PVCCIO_CPU1
	.PWRGD_PVCCIO_CPU2(PWRGD_PVCCIO_CPU2) ,	// input  PWRGD_PVCCIO_CPU2
	.PWRGD_PVCCSA_CPU1(PWRGD_PVCCSA_CPU1) ,	// input  PWRGD_PVCCSA_CPU1
	.PWRGD_PVCCSA_CPU2(PWRGD_PVCCSA_CPU2) ,	// input  PWRGD_PVCCSA_CPU2
	.PWRGD_VCCANA_PCIE_CPU1(PWRGD_VCCANA_PCIE_CPU1) ,	// input  PWRGD_VCCANA_PCIE_CPU1
	.PWRGD_VCCANA_PCIE_CPU2(PWRGD_VCCANA_PCIE_CPU2) ,	// input  PWRGD_VCCANA_PCIE_CPU2
	.RST_DEDI_BUSY_PLD_N(RST_DEDI_BUSY_PLD_N) ,	// input  RST_DEDI_BUSY_PLD_N
	.DBP_POWER_BTN_N(DBP_POWER_BTN_N) ,	// input  DBP_POWER_BTN_N
	.DBP_SYSPWROK_PLD(DBP_SYSPWROK_PLD) ,	// input  DBP_SYSPWROK_PLD
	.FM_FORCE_PWRON_LVC3(FM_FORCE_PWRON_LVC3) ,	// input  FM_FORCE_PWRON_LVC3
	.FM_PLD_DEBUG_HEADER_N(FM_PLD_DEBUG_HEADER_N) ,	// input  FM_PLD_DEBUG_HEADER_N
	.FM_PLD_HEARTBEAT_LVC3(FM_PLD_HEARTBEAT_LVC3) ,	// output  FM_PLD_HEARTBEAT_LVC3
	.FM_PLD_DEBUG(FM_PLD_DEBUG) ,	// output [7:0] FM_PLD_DEBUG
	.FP_LED_FAN_FAULT_PWRSTBY_PLD_N(FP_LED_FAN_FAULT_PWRSTBY_PLD_N) ,	// output  FP_LED_FAN_FAULT_PWRSTBY_PLD_N
	.FP_BMC_PWR_BTN_CO_N(FP_BMC_PWR_BTN_CO_N) ,	// output  FP_BMC_PWR_BTN_CO_N
	.FAN_BMC_PWM_R(FAN_BMC_PWM_R) ,	// output  FAN_BMC_PWM_R
	.PWRGD_DSW_PWROK_R(PWRGD_DSW_PWROK_R) ,	// input  PWRGD_DSW_PWROK_R
	.FM_BMC_BMCINIT(FM_BMC_BMCINIT) ,	// input  FM_BMC_BMCINIT
	.FM_ME_PFR_1(FM_ME_PFR_1) ,	// input  FM_ME_PFR_1
	.FM_ME_PFR_2(FM_ME_PFR_2) ,	// input  FM_ME_PFR_2
	.FM_PFR_CPU1_BMCINIT(FM_PFR_CPU1_BMCINIT) ,	// output  FM_PFR_CPU1_BMCINIT
	.FM_PFR_CPU1_FRMAGENT(FM_PFR_CPU1_FRMAGENT) ,	// output  FM_PFR_CPU1_FRMAGENT
	.FM_PFR_CPU2_BMCINIT(FM_PFR_CPU2_BMCINIT) ,	// output  FM_PFR_CPU2_BMCINIT
	.FM_PFR_LEGACY_CPU1(FM_PFR_LEGACY_CPU1) ,	// output  FM_PFR_LEGACY_CPU1
	.FM_PFR_PROV_UPDATE_N(FM_PFR_PROV_UPDATE_N) ,	// input  FM_PFR_PROV_UPDATE_N
	.FM_PFR_DEBUG_MODE_N(FM_PFR_DEBUG_MODE_N) ,	// input  FM_PFR_DEBUG_MODE_N
	.FM_PFR_FORCE_RECOVERY_N(FM_PFR_FORCE_RECOVERY_N) ,	// input  FM_PFR_FORCE_RECOVERY_N
	.FM_PFR_MUX_OE_CTL_PLD(FM_PFR_MUX_OE_CTL_PLD) ,	// output  FM_PFR_MUX_OE_CTL_PLD
	.FM_PFR_CLK_MUX_SEL(FM_PFR_CLK_MUX_SEL) ,	// output  FM_PFR_CLK_MUX_SEL
	.RST_PFR_EXTRST_N(RST_PFR_EXTRST_N) ,	// output  RST_PFR_EXTRST_N
	.RST_PFR_OVR_RTC_N(RST_PFR_OVR_RTC_N) ,	// inout  RST_PFR_OVR_RTC_N
	.RST_PFR_OVR_SRTC_N(RST_PFR_OVR_SRTC_N) ,	// inout  RST_PFR_OVR_SRTC_N
	.FP_ID_BTN_N(FP_ID_BTN_N) ,	// input  FP_ID_BTN_N
	.FP_ID_BTN_PFR_N(FP_ID_BTN_PFR_N) ,	// output  FP_ID_BTN_PFR_N
	.FP_ID_LED_PFR_N(FP_ID_LED_PFR_N) ,	// output  FP_ID_LED_PFR_N
	.FP_ID_LED_N(FP_ID_LED_N) ,	// input  FP_ID_LED_N
	.FP_LED_STATUS_AMBER_PFR_N(FP_LED_STATUS_AMBER_PFR_N) ,	// output  FP_LED_STATUS_AMBER_PFR_N
	.FP_LED_STATUS_AMBER_N(FP_LED_STATUS_AMBER_N) ,	// input  FP_LED_STATUS_AMBER_N
	.FP_LED_STATUS_GREEN_PFR_N(FP_LED_STATUS_GREEN_PFR_N) ,	// output  FP_LED_STATUS_GREEN_PFR_N
	.FP_LED_STATUS_GREEN_N(FP_LED_STATUS_GREEN_N) ,	// input  FP_LED_STATUS_GREEN_N
	.FM_SPI_PFR_PCH_MASTER_SEL(FM_SPI_PFR_PCH_MASTER_SEL) ,	// output  FM_SPI_PFR_PCH_MASTER_SEL
	.FM_SPI_PFR_BMC_BT_MASTER_SEL(FM_SPI_PFR_BMC_BT_MASTER_SEL) ,	// output  FM_SPI_PFR_BMC_BT_MASTER_SEL
	.RST_SPI_PFR_BMC_BOOT_N(RST_SPI_PFR_BMC_BOOT_N) ,	// output  RST_SPI_PFR_BMC_BOOT_N
	.RST_SPI_PFR_PCH_N(RST_SPI_PFR_PCH_N) ,	// output  RST_SPI_PFR_PCH_N
	.SPI_BMC_BOOT_CS_N(SPI_BMC_BOOT_CS_N) ,	// input  SPI_BMC_BOOT_CS_N
	.SPI_PFR_BMC_BT_SECURE_CS_N(SPI_PFR_BMC_BT_SECURE_CS_N) ,	// output  SPI_PFR_BMC_BT_SECURE_CS_N
	.SPI_PCH_BMC_PFR_CS0_N(SPI_PCH_BMC_PFR_CS0_N) ,	// input  SPI_PCH_BMC_PFR_CS0_N
	.SPI_PFR_PCH_BMC_SECURE_CS0_N(SPI_PFR_PCH_BMC_SECURE_CS0_N) ,	// output  SPI_PFR_PCH_BMC_SECURE_CS0_N
	.SPI_PCH_CS1_N(SPI_PCH_CS1_N) ,	// input  SPI_PCH_CS1_N
	.SPI_PFR_PCH_SECURE_CS1_N(SPI_PFR_PCH_SECURE_CS1_N) ,	// output  SPI_PFR_PCH_SECURE_CS1_N
	.SPI_BMC_BT_MUXED_MON_CLK(SPI_BMC_BT_MUXED_MON_CLK) ,	// inout  SPI_BMC_BT_MUXED_MON_CLK
	.SPI_BMC_BT_MUXED_MON_MISO(SPI_BMC_BT_MUXED_MON_MISO) ,	// inout  SPI_BMC_BT_MUXED_MON_MISO
	.SPI_BMC_BT_MUXED_MON_MOSI(SPI_BMC_BT_MUXED_MON_MOSI) ,	// inout  SPI_BMC_BT_MUXED_MON_MOSI
	.SPI_CPU1_PFR_CLK_PLD(SPI_CPU1_PFR_CLK_PLD) ,	// inout  SPI_CPU1_PFR_CLK_PLD
	.SPI_CPU1_PFR_MOSI_PLD(SPI_CPU1_PFR_MOSI_PLD) ,	// inout  SPI_CPU1_PFR_MOSI_PLD
	.SPI_CPU1_PFR_MISO_PLD(SPI_CPU1_PFR_MISO_PLD) ,	// inout  SPI_CPU1_PFR_MISO_PLD
	.SPI_CPU1_PFR_CS_PLD(SPI_CPU1_PFR_CS_PLD) ,	// inout  SPI_CPU1_PFR_CS_PLD
	.SPI_CPU2_PFR_CLK_PLD(SPI_CPU2_PFR_CLK_PLD) ,	// inout  SPI_CPU2_PFR_CLK_PLD
	.SPI_CPU2_PFR_MOSI_PLD(SPI_CPU2_PFR_MOSI_PLD) ,	// inout  SPI_CPU2_PFR_MOSI_PLD
	.SPI_CPU2_PFR_MISO_PLD(SPI_CPU2_PFR_MISO_PLD) ,	// inout  SPI_CPU2_PFR_MISO_PLD
	.SPI_CPU2_PFR_CS_PLD(SPI_CPU2_PFR_CS_PLD) ,	// inout  SPI_CPU2_PFR_CS_PLD
	.SPI_PCH_BMC_SAFS_MUXED_MON_CLK(SPI_PCH_BMC_SAFS_MUXED_MON_CLK) ,	// inout  SPI_PCH_BMC_SAFS_MUXED_MON_CLK
	.SPI_PCH_BMC_SAFS_MUXED_MON_IO0(SPI_PCH_BMC_SAFS_MUXED_MON_IO0) ,	// inout  SPI_PCH_BMC_SAFS_MUXED_MON_IO0
	.SPI_PCH_BMC_SAFS_MUXED_MON_IO1(SPI_PCH_BMC_SAFS_MUXED_MON_IO1) ,	// inout  SPI_PCH_BMC_SAFS_MUXED_MON_IO1
	.SPI_PCH_BMC_SAFS_MUXED_MON_IO2(SPI_PCH_BMC_SAFS_MUXED_MON_IO2) ,	// inout  SPI_PCH_BMC_SAFS_MUXED_MON_IO2
	.SPI_PCH_BMC_SAFS_MUXED_MON_IO3(SPI_PCH_BMC_SAFS_MUXED_MON_IO3) ,	// inout  SPI_PCH_BMC_SAFS_MUXED_MON_IO3
	.SPI_PFR_BMC_FLASH1_BT_CLK(SPI_PFR_BMC_FLASH1_BT_CLK) ,	// inout  SPI_PFR_BMC_FLASH1_BT_CLK
	.SPI_PFR_BMC_FLASH1_BT_MOSI(SPI_PFR_BMC_FLASH1_BT_MOSI) ,	// inout  SPI_PFR_BMC_FLASH1_BT_MOSI
	.SPI_PFR_BMC_FLASH1_BT_MISO(SPI_PFR_BMC_FLASH1_BT_MISO) ,	// inout  SPI_PFR_BMC_FLASH1_BT_MISO
	.SPI_PFR_BMC_BOOT_R_IO2(SPI_PFR_BMC_BOOT_R_IO2) ,	// inout  SPI_PFR_BMC_BOOT_R_IO2
	.SPI_PFR_BMC_BOOT_R_IO3(SPI_PFR_BMC_BOOT_R_IO3) ,	// inout  SPI_PFR_BMC_BOOT_R_IO3
	.SPI_PFR_PCH_R_CLK(SPI_PFR_PCH_R_CLK) ,	// inout  SPI_PFR_PCH_R_CLK
	.SPI_PFR_PCH_R_IO0(SPI_PFR_PCH_R_IO0) ,	// inout  SPI_PFR_PCH_R_IO0
	.SPI_PFR_PCH_R_IO1(SPI_PFR_PCH_R_IO1) ,	// inout  SPI_PFR_PCH_R_IO1
	.SPI_PFR_PCH_R_IO2(SPI_PFR_PCH_R_IO2) ,	// inout  SPI_PFR_PCH_R_IO2
	.SPI_PFR_PCH_R_IO3(SPI_PFR_PCH_R_IO3) ,	// inout  SPI_PFR_PCH_R_IO3
	.SMB_BMC_HSBP_STBY_LVC3_SCL(SMB_BMC_HSBP_STBY_LVC3_SCL) ,	// inout  SMB_BMC_HSBP_STBY_LVC3_SCL
	.SMB_BMC_HSBP_STBY_LVC3_SDA(SMB_BMC_HSBP_STBY_LVC3_SDA) ,	// inout  SMB_BMC_HSBP_STBY_LVC3_SDA
	.SMB_PFR_HSBP_STBY_LVC3_SCL(SMB_PFR_HSBP_STBY_LVC3_SCL) ,	// inout  SMB_PFR_HSBP_STBY_LVC3_SCL
	.SMB_PFR_HSBP_STBY_LVC3_SDA(SMB_PFR_HSBP_STBY_LVC3_SDA) ,	// inout  SMB_PFR_HSBP_STBY_LVC3_SDA
	.SMB_BMC_SPD_ACCESS_STBY_LVC3_SCL(SMB_BMC_SPD_ACCESS_STBY_LVC3_SCL) ,	// inout  SMB_BMC_SPD_ACCESS_STBY_LVC3_SCL
	.SMB_BMC_SPD_ACCESS_STBY_LVC3_SDA(SMB_BMC_SPD_ACCESS_STBY_LVC3_SDA) ,	// inout  SMB_BMC_SPD_ACCESS_STBY_LVC3_SDA
	.SMB_CPU_PIROM_SCL(SMB_CPU_PIROM_SCL) ,	// inout  SMB_CPU_PIROM_SCL
	.SMB_CPU_PIROM_SDA(SMB_CPU_PIROM_SDA) ,	// inout  SMB_CPU_PIROM_SDA
	.SMB_PFR_PMB1_STBY_LVC3_SCL(SMB_PFR_PMB1_STBY_LVC3_SCL) ,	// inout  SMB_PFR_PMB1_STBY_LVC3_SCL
	.SMB_PFR_PMB1_STBY_LVC3_SDA(SMB_PFR_PMB1_STBY_LVC3_SDA) ,	// inout  SMB_PFR_PMB1_STBY_LVC3_SDA
	.SMB_PCH_PMBUS2_STBY_LVC3_SCL(SMB_PCH_PMBUS2_STBY_LVC3_SCL) ,	// input  SMB_PCH_PMBUS2_STBY_LVC3_SCL
	.SMB_PCH_PMBUS2_STBY_LVC3_SDA(SMB_PCH_PMBUS2_STBY_LVC3_SDA) ,	// inout  SMB_PCH_PMBUS2_STBY_LVC3_SDA
	.SMB_PFR_PMBUS2_STBY_LVC3_SCL(SMB_PFR_PMBUS2_STBY_LVC3_SCL) ,	// inout  SMB_PFR_PMBUS2_STBY_LVC3_SCL
	.SMB_PFR_PMBUS2_STBY_LVC3_SDA(SMB_PFR_PMBUS2_STBY_LVC3_SDA) ,	// inout  SMB_PFR_PMBUS2_STBY_LVC3_SDA
	.SMB_PFR_RFID_STBY_LVC3_SCL(SMB_PFR_RFID_STBY_LVC3_SCL) ,	// inout  SMB_PFR_RFID_STBY_LVC3_SCL
	.SMB_PFR_RFID_STBY_LVC3_SDA(SMB_PFR_RFID_STBY_LVC3_SDA) ,	// inout  SMB_PFR_RFID_STBY_LVC3_SDA
	.JTAG_CPU_RMDB_TCLK(JTAG_CPU_RMDB_TCLK) ,	// inout  JTAG_CPU_RMDB_TCLK
	.JTAG_CPU_RMDB_TD0(JTAG_CPU_RMDB_TD0) ,	// inout  JTAG_CPU_RMDB_TD0
	.JTAG_CPU_RMDB_TDI(JTAG_CPU_RMDB_TDI) ,	// inout  JTAG_CPU_RMDB_TDI
	.JTAG_CPU_RMDB_TMS(JTAG_CPU_RMDB_TMS) ,	// inout  JTAG_CPU_RMDB_TMS
	.JTAG_CPU_RMDB_TRST(JTAG_CPU_RMDB_TRST) ,	// inout  JTAG_CPU_RMDB_TRST
	.JTAG_REMOTE_DB_TCLK(JTAG_REMOTE_DB_TCLK) ,	// inout  JTAG_REMOTE_DB_TCLK
	.JTAG_REMOTE_DB_TD0(JTAG_REMOTE_DB_TD0) ,	// inout  JTAG_REMOTE_DB_TD0
	.JTAG_REMOTE_DB_TDI(JTAG_REMOTE_DB_TDI) ,	// inout  JTAG_REMOTE_DB_TDI
	.JTAG_REMOTE_DB_TMS(JTAG_REMOTE_DB_TMS) ,	// inout  JTAG_REMOTE_DB_TMS
	.JTAG_REMOTE_DB_TRST(JTAG_REMOTE_DB_TRST) 	// inout  JTAG_REMOTE_DB_TRST
);

defparam Wilson_City_RP_TOP_inst.LOW = 'b0;
defparam Wilson_City_RP_TOP_inst.HIGH = 'b1;
defparam Wilson_City_RP_TOP_inst.Z = 'bZ;
